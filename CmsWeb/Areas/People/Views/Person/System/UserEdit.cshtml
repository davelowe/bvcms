@using UtilityExtensions
@using CmsData
@model User
<form class="margin-top form-horizontal ajax left-gutter">
    <fieldset>
        <legend>Manage User @Model.Username
            <span class="pull-right">
                <small><a class="ajax" href='/Person2/Users/@Model.PeopleId'>User List</a></small>&nbsp;&nbsp;
            <a class="helplink" target="_blank" href='@Util.HelpLink("ManageUser")'>help</a>
            </span>
        </legend>
        <div class="row">
            <div class="inline align-top wauto">
                @Html.EditorFor(m => m.Username)
            </div>
            <div class="inline align-top left-gutter wauto">
                @Html.EditorFor(m => m.Password, "password")
            </div>
        </div>
        <div class="well">
            @{
                var list = CmsData.User.AllRoles(DbUtil.Db).Where(rr => rr.RoleName != "OrgLeadersOnly").Select(rr => rr.RoleName).ToList();
                var itemspercol = list.Count / 4;
            }
            @for (var col = 0; col < list.Count / itemspercol; col++)
            {
                <div class="inline align-top left-gutter">
                    @for (var i = col * itemspercol; i < (col + 1) * itemspercol; i++)
                    {
                        @Role(list[i])
                    }
                </div>
            }
            <div>
                @Role("OrgLeadersOnly", "<strong>Warning!</strong> limiting role, see help link above")
            </div>
        </div>
        <div>
            User Created: @Model.CreationDate.FormatDateTm()
            <div class="pull-right inline">
                <a href="/Person2/Impersonate/@Model.UserId" class="btn btn-default btn-warning">Impersonate User</a>
                <a href="/Person2/UserDelete/@Model.UserId" class="btn btn-default btn-danger ajax" data-confirm="Are you sure you want to remove User @Model.Username?">Delete User</a>
                <a href="/Person2/UserUpdate/@Model.UserId" class="btn btn-default btn-primary validate ajax">Save</a>
                <div class="inline wauto">@Html.Editor("sendwelcome", new { label = "Send Welcome" })</div>
            </div>
        </div>
    </fieldset>
</form>
@helper Role(string role, string warning = null)
{
    <div class="form-group @(warning.HasValue() ? "warning" : "")">
        <label class="control-label">@role</label>
        <div class="controls">
            <input name="role" value="@role" class="ckbox" type="checkbox" @(Model.Roles.Any(ro => ro == role) ? "checked='checked'" : "") />
            <span class="help-inline">
                @Html.Raw(warning)
            </span>
        </div>
    </div>
}