@using System.Text
@using CmsWeb.Areas.People.Models
@using UtilityExtensions
@model PersonModel
@if (Model.Person.CanUserEditBasic)
{
    <a id="profile-picture" href="#picture-modal" title="Click to see larger version or upload new" data-toggle="modal">@Picture()</a>
}
else
{
    <a href="@Model.Picture.LargeUrl" title="Click to see larger version" target="_blank">@Picture()</a>
}
<div class="profile">
    <h2 id="nameline" class="col-md-8 @(Model.Person.IsDeceased == true ? "alert alert-danger" : "")">
        @Model.Name
    </h2>
    @if (User.IsInRole("Access"))
    {
        <div class="col-md-4 pull-right" id="profile-actions">
            @Html.Partial("Toolbar/Toolbar", Model.Users)
        </div>
    }
    <ul class="meta unstyled">
        <li class="role">
            @Address(Model.PrimaryAddr)
            @Address(Model.OtherAddr)
            @ContactLine()
        </li>
        <li class="badges">
            @Html.DisplayFor(m => m.basic.Campus, "InlineCode")
            @Html.DisplayFor(m => m.basic.PositionInFamily, "InlineCode")
            @Badge(true, @Model.MemberStatus, "label-success")
            @foreach (var status in Model.StatusFlags)
            {
                @Badge(Model.MemberStatus != status, status, "label-success")
            }
            @Badge(Model.basic.DoNotVisitFlag, "Do Not Visit", "label-important")
            @Badge(Model.basic.DoNotCallFlag, "Do Not Call", "label-important")
            @Badge(Model.basic.DoNotMailFlag, "Do Not Mail", "label-important")
        </li>
    </ul>
</div>
@Html.Partial("Personal/PictureUpload", Model)

@helper Address(AddressInfo a)
{
    if (a.AddressLineOne.HasValue() || a.Preferred)
    {
        var icon = a.Name == "FamilyAddr" ? "icon-home" : "icon-male";
    <i class="@icon icon-fixedwidth"></i>
    <a href="#" class="popover-map" rel="popover">@a.AddrCityStateZipLine()</a>
    <a href="/Address/Edit/@a.Name/@Model.PeopleId" class="edit editaddr">&nbsp;&nbsp;<i class="icon-pencil"></i></a>
    <br />
    }
}
@helper ContactLine()
{
    const string bull = " &bull; ";
    var sb = new StringBuilder(Model.Email);
    sb.AppendNext(bull, Model.Cell);
    sb.AppendNext(bull, Model.HomePhone);
    if (sb.Length > 0)
    {
    <i class="icon-comment-alt icon-fixedwidth"></i>
    <span id="contactline">@Html.Raw(sb)</span>
    }
}
@helper Badge(bool tf, string badge, string labeltype)
{
    if (tf)
    {
    <span class="label @labeltype">@badge</span>
    }
}
@helper Picture()
{
    <div class="portrait" style="background-image: url(@Model.Picture.SmallUrl);"></div>
}